#!/usr/bin/env bash

# ------------------------------------------------------------------------------
# ~/repos/dev/helper/all/usr/jekyll/bin/bundle
# J1 Docker - Helper script for the RubyGem bundler
#
# Product/Info:
# https://jekyll-one.com
#
# Copyright (C) 2018 Juergen Adams
#
# J1 Template is licensed under the MIT License.
# See: https://github.com/jekyll-one/j1_template_mde/blob/master/LICENSE
# ------------------------------------------------------------------------------
# NOTE:
#
# ------------------------------------------------------------------------------
set -e

[[ ${DEBUG} == true ]] && set -x

# ------------------------------------------------------------------------------
# The "bundle" helper is NOT needed to run if NO Gemfile
# is found
#
# NOTE: We should just bail out and leave this place for
#       we are nothing but a problem from here.
# ------------------------------------------------------------------------------
if [ ! -f "Gemfile" ]; then
  exit 0
fi

# ------------------------------------------------------------------------------
# This can happen sometimes, this mostly happens when
# the user has either 1.) set their own USER= which is not
# what we want, or if inside of `jekyll new` because
# Jekyll will simply call `bundle`
# ------------------------------------------------------------------------------
if [ "$(id -u)" != "0" ]; then
   exec $GEM_BIN/bundle "$@"
fi

# Make sure that proper permissions are set on th bundle (files)
# ------------------------------------------------------------------------------
if [ "$1" = "install" ] || [ "$1" = "clean" ] || [ "$1" = "update" ]; then
  if [ "$(stat -c '%U' $BUNDLE_HOME)" != "j1" ]; then
    chown -R j1:j1 $BUNDLE_HOME
  fi
fi

# ------------------------------------------------------------------------------
exe=$GEM_BIN/bundle

if [ "$1" = "install" ] || [ "$1" = "update" ]; then
  # There is no need to report that we are using check.
  if [ "$1" = "update" ] || ! su-exec j1 $exe check 1>/dev/null 2>&1; then
    if [ ! -f "/updated" ] && connected && [ -f ".apk" ]; then
      apk add --no-cache --no-progress \
        $(cat .apk)
    fi
    su-exec j1 $exe config jobs 2
    su-exec j1 $exe config ignore_messages true
    su-exec j1 $exe config build.nokogiri --use-system-libraries
    su-exec j1 $exe config disable_version_check true
    unset DEBUG; su-exec j1 $exe "$@"
    su-exec j1 $exe clean
  fi
elif [ "$1" = "remove" ]; then
  su-exec j1 $exe list | grep -v bundle | ruby -e 'ARGF.readlines[1..-1].each {|l| g = l.split(" ");  puts "Removing #{g[1]}"; `gem uninstall --force #{g[1]} -v #{g[2].gsub(/\(|\)/, "")}`; }'
  rm -f J1_DATA_DIR/Gemfile.lock
else
  su-exec j1 $exe "$@"
fi
