#!/usr/bin/env bash

# ------------------------------------------------------------------------------
# ~/repos/dev/copy/all/usr/j1/bin/j1
# J1 Docker - Helper|Wrapper script that defines the main control
# interface for the j1image app
#
# Product/Info:
# https://jekyll-one.com
#
# Copyright (C) 2018 Juergen Adams
#
# J1 Template is licensed under the MIT License.
# See: https://github.com/jekyll-one/j1_template_mde/blob/master/LICENSE
# ------------------------------------------------------------------------------
# NOTE:
#
# ------------------------------------------------------------------------------
set -e

[[ $DEBUG == true ]] && set -x

args=($(default-args $@))
cmd_args=("${args[@]:1}")

[[ $DEBUG == true ]] && echo "j1 cmd_args:   ${cmd_args[@]}"
[[ $DEBUG == true ]] && echo "j1 default-args: ${args[@]}"

# ------------------------------------------------------------------------------
# Detect, based on the arg list, what binary or script is
# to be executed
# ------------------------------------------------------------------------------
if [[ ${args[@]} =~ build|cache|clean|help|list|push ]]; then
  exe="docker-template"
elif [[ ${args[@]} =~ clone|pull ]]; then
  exe="${USR_BIN}/git"
elif [[ ${args[@]} =~ ruby ]]; then
  exe="${USR_BIN}/ruby"
else
  exe="unknown"
fi

# ------------------------------------------------------------------------------
# Set the correct ownership for the run-time environment
# ------------------------------------------------------------------------------
[[ -d .cache ]] && chown -R j1:j1 .cache

# ------------------------------------------------------------------------------
# Print Ruby version as a banner
# ------------------------------------------------------------------------------
echo "$(ruby --version)"

# ------------------------------------------------------------------------------
# Run the final command and arg list
# ------------------------------------------------------------------------------
if [[ ${exe} =~ docker-template ]]; then
  if [[ ${args[@]} =~ build ]]; then
    su-exec j1 $exe ${args[@]} --no-push
  else
    su-exec j1 $exe ${args[@]}
  fi
elif [[ ${exe} =~ git|ruby ]]; then
  su-exec j1 $exe ${args[@]}
else
  echo "Cannot understand your command: ${args[@]}"
  # su-exec j1 j1-image help
fi
